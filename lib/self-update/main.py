#!/usr/bin/python3
import os
import re 
import asyncio
import argparse
import subprocess 

DESCRIPTION="SELF UPDATE : Self update 3C-Pentest-Toolbox command line"

def get_commit_diff():
    try:
        project_dir = os.path.realpath(os.path.dirname(os.path.abspath(__file__)) + "/../")
        subprocess.run(["git", "fetch"], cwd=project_dir, capture_output=True, text=True, check=True)
        result = subprocess.run(["git", "status"], cwd=project_dir, capture_output=True, text=True, check=True)
        match = re.search( r'by\s+(\d+)\s+commit', result.stdout)
        if match == None:
            return 0
        return match.group(1)    
    except subprocess.CalledProcessError as e:
        print("Error:", e)
        return 0

def update():
    project_dir = os.path.realpath(os.path.dirname(os.path.abspath(__file__)) + "/../")
    subprocess.run(["git", "pull"], cwd=project_dir, capture_output=True, text=True, check=True)
    new_diff = get_commit_diff() 
    if new_diff == 0: 
        print("Successfully updated !")
    else: 
        print("Something went wrong during the update")

def parse_args():
    parser = argparse.ArgumentParser(description=DESCRIPTION, formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument("--force", help="Enforce update", action=argparse.BooleanOptionalAction, default=False)
    return dict(vars(parser.parse_args()))
 
async def run(force):
    diff = get_commit_diff()
    if diff == 0:
        print("You are already up to date.")
        return 
    print(f"You have {diff} versions late !")
    if force == False: 
        print("You must set the --force flag to update")
        return 
    print("Now updating ...")
    update()

if __name__ == "__main__":
    args = parse_args()
    asyncio.run(run(**args))


