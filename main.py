#!/usr/bin/python3
import os
import sys
import asyncio
import argparse
import importlib

def list_modules():
    return sorted(os.listdir(os.path.dirname(os.path.realpath(os.path.abspath(__file__))) + "/lib"))

def parse_args():
    parser = argparse.ArgumentParser(description="3C Pentest Toolbox", formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument("module", help="Module to call", choices=list_modules())
    parser.add_argument('args', nargs=argparse.REMAINDER) 
    return dict(vars(parser.parse_args()))

def allow_argument_passing():
    # This function allow argument passing to sub.module
    sys.argv[1] = sys.argv[0] + " " + sys.argv[1]
    sys.argv = sys.argv[1:]

if __name__ == "__main__":
    args = parse_args()
    allow_argument_passing()
    module = importlib.import_module('lib.' + args["module"] + ".main")
    module_run = getattr(module, "run")
    module_parse_args = getattr(module, "parse_args")
    
    args = module_parse_args()
    asyncio.run(module_run(**args))